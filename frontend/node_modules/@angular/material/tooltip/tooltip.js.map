{"version":3,"sources":["tooltip/tooltip.ts"],"names":[],"mappings":"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","file":"tooltip.js","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Component,\n  Directive,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n  AnimationTransitionEvent,\n  NgZone,\n} from '@angular/core';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayModule,\n  OverlayRef,\n  ComponentPortal,\n  OverlayConnectionPosition,\n  OriginConnectionPosition,\n  OVERLAY_PROVIDERS,\n} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nexport type TooltipPosition = 'before' | 'after' | 'above' | 'below';\n\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nexport const TOOLTIP_HIDE_DELAY  = 1500;\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[md-tooltip]',\n  host: {\n    '(mouseenter)': 'show()',\n    '(mouseleave)': 'hide()',\n  },\n  exportAs: 'mdTooltip',\n})\nexport class MdTooltip {\n  _overlayRef: OverlayRef;\n  _tooltipInstance: TooltipComponent;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  private _position: TooltipPosition = 'below';\n  @Input('tooltip-position') get position(): TooltipPosition {\n    return this._position;\n  }\n\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n\n  /** The message to be displayed in the tooltip */\n  private _message: string;\n  @Input('md-tooltip') get message() {\n    return this._message;\n  }\n  set message(value: string) {\n    this._message = value;\n    if (this._tooltipInstance) {\n      this._setTooltipMessage(this._message);\n    }\n  }\n\n  constructor(private _overlay: Overlay, private _elementRef: ElementRef,\n              private _viewContainerRef: ViewContainerRef, private _ngZone: NgZone) {}\n\n  /** Dispose the tooltip when destroyed */\n  ngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n  }\n\n  /** Shows the tooltip */\n  show(): void {\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipMessage(this._message);\n    this._tooltipInstance.show(this._position);\n  }\n\n  /**\n   * Create the overlay config and position strategy\n   * Hides the tooltip after the provided delay in ms. Defaults the delay to the material design\n   * prescribed delay time\n   */\n  hide(delay: number = TOOLTIP_HIDE_DELAY): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Create the tooltip to display */\n  private _createTooltip(): void {\n    this._createOverlay();\n    let portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance.afterHidden().subscribe(() => {\n      this._disposeTooltip();\n    });\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): void {\n    let origin = this._getOrigin();\n    let position = this._getOverlayPosition();\n    let strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    let config = new OverlayState();\n    config.positionStrategy = strategy;\n\n    this._overlayRef = this._overlay.create(config);\n  }\n\n  /** Disposes the current tooltip and the overlay it is attached to */\n  private _disposeTooltip(): void {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._tooltipInstance = null;\n  }\n\n  /** Returns the origin position based on the user's position preference */\n  private _getOrigin(): OriginConnectionPosition {\n    switch (this.position) {\n      case 'before': return { originX: 'start',  originY: 'center' };\n      case 'after':  return { originX: 'end',    originY: 'center' };\n      case 'above':  return { originX: 'center', originY: 'top' };\n      case 'below':  return { originX: 'center', originY: 'bottom' };\n    }\n  }\n\n  /** Returns the overlay position based on the user's preference */\n  private _getOverlayPosition(): OverlayConnectionPosition {\n    switch (this.position) {\n      case 'before': return { overlayX: 'end',    overlayY: 'center' };\n      case 'after':  return { overlayX: 'start',  overlayY: 'center' };\n      case 'above':  return { overlayX: 'center', overlayY: 'bottom' };\n      case 'below':  return { overlayX: 'center', overlayY: 'top' };\n    }\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    this._tooltipInstance.message = message;\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => {\n      if (this._tooltipInstance) {\n        this._overlayRef.updatePosition();\n      }\n    });\n  }\n}\n\nexport type TooltipVisibility = 'visible' | 'hidden';\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  animations: [\n    trigger('state', [\n      state('void', style({transform: 'scale(0)'})),\n      state('visible', style({transform: 'scale(1)'})),\n      state('hidden', style({transform: 'scale(0)'})),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    '(body:click)': 'this._handleBodyInteraction()'\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility;\n\n  /** Whether interactions on the page should close the tooltip */\n  _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: string = 'bottom';\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private _onHide: Subject<any> = new Subject();\n\n  /** Shows the tooltip with an animation originating from the provided origin */\n  show(position: TooltipPosition): void {\n    this._closeOnInteraction = false;\n    this._visibility = 'visible';\n    this._setTransformOrigin(position);\n\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // If this was set to true immediately, then the body click would trigger interaction and\n    // close the tooltip right after it was displayed.\n    setTimeout(() => { this._closeOnInteraction = true; }, 0);\n  }\n\n  /** Begins the animation to hide the tooltip after the provided delay in ms */\n  hide(delay: number): void {\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the tooltip position */\n  _setTransformOrigin(value: TooltipPosition) {\n    switch (value) {\n      case 'before': this._transformOrigin = 'right'; break;\n      case 'after':  this._transformOrigin = 'left'; break;\n      case 'above':  this._transformOrigin = 'bottom'; break;\n      case 'below':  this._transformOrigin = 'top'; break;\n    }\n  }\n\n  _afterVisibilityAnimation(e: AnimationTransitionEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n}\n\n\n@NgModule({\n  imports: [OverlayModule],\n  exports: [MdTooltip, TooltipComponent],\n  declarations: [MdTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n})\nexport class MdTooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdTooltipModule,\n      providers: OVERLAY_PROVIDERS,\n    };\n  }\n}\n"]}